<?php
/**
 * Copyright Â© 2017 x-mage2(Yosto). All rights reserved.
 * See README.md for details.
 */

?>

<div class="admin__field field">
    <input id="pac-input" class="controls" type="text" placeholder="Search Box">
    <div id="map_canvas"></div> 
</div>	
<?php
$markerImageUrl = $block->getMarkerImageUrl();
$defaultLat = $block->getDefaultLat();
$defaultLong = $block->getDefaultLong();
?>
<script>
    var apiKey = '<?php echo $block->getApiKey() ?>';
</script>
<script>
    require(['jquery', 'Yosto_Opc/js/google_maps_loader'], function ($, GoogleMapsLoader) {
        GoogleMapsLoader.done(function () {
            var map;
            var marker;
            var latitudeTextBox     = $("#location_latitude");
            var longitudeTextBox    = $("#location_longitude");
            var markerimage         = "<?php echo $markerImageUrl ;?>";
            var input = document.getElementById('pac-input');

            function initialize() {
                if(latitudeTextBox.val() && longitudeTextBox.val()){
                    latitudeTextBox     = latitudeTextBox.val();
                    longitudeTextBox    = longitudeTextBox.val();
                } else {
                    latitudeTextBox     = '<?php echo $defaultLat ?>';
                    longitudeTextBox    = '<?php echo $defaultLong ?>';
                }

                var centerLatlng = new google.maps.LatLng(latitudeTextBox, longitudeTextBox);
                var mapOptions = {
                    zoom: 15,
                    center: centerLatlng,
                    scrollwheel: true,
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    mapTypeControl: true,
                    mapTypeControlOptions: { style: google.maps.MapTypeControlStyle.DEFAULT },
                    navigationControl: true,
                    navigationControlOptions: { style: google.maps.NavigationControlStyle.DEFAULT }
                };
                map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
                var icon = {
                    url: markerimage, // url
                    scaledSize: new google.maps.Size(35, 35), // scaled size
                };

                marker = new google.maps.Marker({
                    draggable: true,
                    map: map,
                    position: centerLatlng,
                    icon : icon
                });

                google.maps.event.addListener(marker, 'dragend', function() {
                    var curLatLng = marker.getPosition();
                    $("#location_latitude").val(curLatLng.lat());
                    $("#location_longitude").val(curLatLng.lng());
                });

                google.maps.event.trigger(marker, "click");

                /** For google map search box **/
                var searchBox = new google.maps.places.SearchBox(input);
                map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
                map.addListener('bounds_changed', function() {
                    searchBox.setBounds(map.getBounds());
                });

                var markers = [];
                // Listen for the event fired when the user selects a prediction and retrieve
                // more details for that place.
                searchBox.addListener('places_changed', function() {
                    var places = searchBox.getPlaces();

                    if (places.length == 0) {
                        return;
                    }

                    // Clear out the old markers.
                    markers.forEach(function(marker) {
                        marker.setMap(null);
                    });
                    markers = [];

                    // For each place, get the icon, name and location.
                    var bounds = new google.maps.LatLngBounds();
                    places.forEach(function(place) {
                        if (!place.geometry) {
                            console.log("Returned place contains no geometry");
                            return;
                        }
                        var icon = {
                            url: place.icon,
                            size: new google.maps.Size(71, 71),
                            origin: new google.maps.Point(0, 0),
                            anchor: new google.maps.Point(17, 34),
                            scaledSize: new google.maps.Size(25, 25)
                        };

                        // Create a marker for each place.
                        markers.push(new google.maps.Marker({
                            map: map,
                            icon: icon,
                            title: place.name,
                            position: place.geometry.location
                        }));

                        if (place.geometry.viewport) {
                            // Only geocodes have viewport.
                            bounds.union(place.geometry.viewport);
                        } else {
                            bounds.extend(place.geometry.location);
                        }
                    });
                    map.fitBounds(bounds);
                });

                /** for user click **/
                google.maps.event.addListener(map, "click", function(event) {
                    var lat = event.latLng.lat();
                    var lng = event.latLng.lng();
                    // populate yor box/field with lat, lng
                    $("#location_latitude").val(lat);
                    $("#location_longitude").val(lng);
                });
            }
            google.maps.event.addDomListener(window, 'load', initialize);

            $("#location_tabs_yosto_storepickup_location_edit_tab_location").parent("li").click(function() {
                var center = map.getCenter();
                google.maps.event.trigger(map, "resize");
                map.setCenter(center);
            });

        });

    });
</script>