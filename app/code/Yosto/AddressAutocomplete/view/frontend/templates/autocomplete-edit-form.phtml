<?php if ($block->isEnable()): ?>
    <script>
            var autocomplete;
            var componentForm = {
                street_number: 'short_name',
                route: 'long_name',
                locality: 'long_name',
                administrative_area_level_1: 'long_name',
                country: 'short_name',
                postal_code: 'short_name'
            };

            var lookupElement = {
                street_number: 'street_1',
                route: 'street_2',
                locality: 'city',
                administrative_area_level_1: 'region',
                country: 'country',
                postal_code: 'zip'
            };

            function initAutocomplete() {
                var input = document.getElementById('street_1');
                input.addEventListener('focus', geolocate, true);

                autocomplete = new google.maps.places.Autocomplete(
                    /** @type {!HTMLInputElement} */(document.getElementById('street_1')),
                    {types: ['geocode']});

                autocomplete.addListener('place_changed', fillInAddress);
                /* For second address */
                var secondInput = document.getElementById('street_2');
                secondInput.addEventListener('focus', geolocate, true);
                new google.maps.places.Autocomplete(
                    /** @type {!HTMLInputElement} */(document.getElementById('street_2')),
                    {types: ['geocode']});

            }

            function fillInAddress() {
                var place = autocomplete.getPlace();

                var street = [];
                var region  = '';

                for (var i = 0; i < place.address_components.length; i++) {
                    var addressType = place.address_components[i].types[0];
                    if (componentForm[addressType]) {
                        var val = place.address_components[i][componentForm[addressType]];
                        if(addressType == 'street_number') {
                            street[0] = val;
                        }
                        else if(addressType == 'route') {
                            street[1] = val;
                        }
                        else if (addressType == 'administrative_area_level_1') {
                            region = val;
                        }
                        else {
                            var elementId = lookupElement[addressType];
                            document.getElementById(elementId).value = val;
                            if(addressType == 'country') {
                                debugger;
                                document.getElementById(elementId).dispatchEvent(new Event('change'));
                            }
                        }
                    }
                }
                if(street.length > 0) {
                    document.getElementById('street_1').value = street.join(' ');
                }
                if(region != '') {
                    if(document.getElementById('region_id')) {
                        var regionSelector = document.getElementById('region_id');
                        for (i = 0; i < regionSelector.length; i++) {
                            if(regionSelector.options[i].text === region)
                            {
                                regionSelector.selectedIndex = i;
                                break;
                            }
                        }
                    }
                    if(document.getElementById('region')) {
                        document.getElementById('region').value = region;

                    }


                }
            }

            function geolocate() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function(position) {
                        var geolocation = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };
                        var circle = new google.maps.Circle({
                            center: geolocation,
                            radius: position.coords.accuracy
                        });
                        autocomplete.setBounds(circle.getBounds());
                    });
                }
            }




    </script>
    <script
            src="https://maps.googleapis.com/maps/api/js?key=<?php echo $block->getApiKey();?>&libraries=places&callback=initAutocomplete"
            async defer></script>
<?php endif;?>
